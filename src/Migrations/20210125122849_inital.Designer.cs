// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TagTest.Database;

namespace TagTest.Migrations
{
    [DbContext(typeof(TagContext))]
    [Migration("20210125122849_inital")]
    partial class inital
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("TagTaggable", b =>
                {
                    b.Property<int>("TaggedId")
                        .HasColumnType("int");

                    b.Property<int>("TagsId")
                        .HasColumnType("int");

                    b.HasKey("TaggedId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("TagTaggable");
                });

            modelBuilder.Entity("TagTest.Entities.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("TagName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("TagTest.Entities.Taggable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.HasKey("Id");

                    b.ToTable("Taggable");
                });

            modelBuilder.Entity("TagTest.Entities.Animal", b =>
                {
                    b.HasBaseType("TagTest.Entities.Taggable");

                    b.Property<bool>("Cute")
                        .HasColumnType("bit");

                    b.ToTable("Animal");
                });

            modelBuilder.Entity("TagTest.Entities.Person", b =>
                {
                    b.HasBaseType("TagTest.Entities.Taggable");

                    b.Property<bool>("Cool")
                        .HasColumnType("bit");

                    b.ToTable("Person");
                });

            modelBuilder.Entity("TagTaggable", b =>
                {
                    b.HasOne("TagTest.Entities.Taggable", null)
                        .WithMany()
                        .HasForeignKey("TaggedId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TagTest.Entities.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TagTest.Entities.Animal", b =>
                {
                    b.HasOne("TagTest.Entities.Taggable", null)
                        .WithOne()
                        .HasForeignKey("TagTest.Entities.Animal", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TagTest.Entities.Person", b =>
                {
                    b.HasOne("TagTest.Entities.Taggable", null)
                        .WithOne()
                        .HasForeignKey("TagTest.Entities.Person", "Id")
                        .OnDelete(DeleteBehavior.ClientCascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
